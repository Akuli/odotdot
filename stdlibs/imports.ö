# the interpreter adds a variable called "importers" to the built-in scope before builtins.ö runs
# but most of the time people don't need to mess with importer functions
# so it's best to put it here imo
# builtins.ö imports this file automatically when setting up other stuff is done
assert ({}.definition_scope.parent_scope.parent_scope `same_object` null);   # parent_scope is built-in scope
var importers = ({}.definition_scope.parent_scope.local_vars.get_and_delete "importers");

var Library = (get_class (import "<stdlibs>/emptylib"));


# a mistake that i just spent some time debugging: i did 'import "somefile.ö";'
# the .ö is not supposed to be a part of the string passed to import
importers.push (lambda "string stackframe" {
    if ((string.slice (string.length.plus -2)) `equals` ".ö") {
        var no_dot_ö = (string.slice 0 (string.length.plus -2));
        throw (new ValueError ((("import ".concat (no_dot_ö.to_debug_string)).concat " instead of ").concat (string.to_debug_string)));
    };
    return null;
});
