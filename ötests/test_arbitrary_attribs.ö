var test = (import "utils").test;
var throws = (import "utils").throws;


class "WeirdThingy" inherits:ArbitraryAttribs {

    # x is defined explicitly, but y is not
    #attrib "x";     # FIXME: uncommenting this breaks things

    method "setup arg" {
        assert (arg == "lol");
        this.x = 1;
        this.y = 2;
    };
    method "lol z" returning:true {
        assert (z == 3);
        return [this.x this.y];
    };
};


test "basic stuff" {
    var weird = (new WeirdThingy "lol");
    assert (weird.x == 1);
    assert (weird.y == 2);
    assert (weird.(lol 3) == [1 2]);

    # TODO: what should this do?
    #weird.lol = "heh";

	[(new ArbitraryAttribs) (import "testfiles/hello") weird].foreach "arbi_instance" {
        var _ = arbi_instance.(to_debug_string);   # make sure it doesn't throw an exception
        throws AttribError {
            debug arbi_instance.wat;
        };
        arbi_instance.wat = 123;
        assert (arbi_instance.wat == 123);
    };
};
