var test = (import "utils").test;
var throws = (import "utils").throws;

class "WeirdThingy" inherits:ArbitraryAttribs {

    attrib "x";
    method "setup arg" {
        assert (arg `equals` "lol");
        this.x = 1;
        this.y = 2;
    };
    method "lol z" {
        assert (z `equals` 3);
        return [this.x this.y];
    };
};


test "basic stuff" {
    var weird = (new WeirdThingy "lol");
    assert (weird.x `equals` 1);
    assert (weird.y `equals` 2);
    assert ((weird.lol 3) `equals` [1 2]);

    # TODO: what should this do?
    #weird.lol = "heh";

	var Library = (import "<stdlibs>/imports").Library;
    foreach "arbi_instance" [(new ArbitraryAttribs) (new Library) weird] {
        arbi_instance.to_debug_string;   # make sure it doesn't throw an exception
        throws AttribError {
            debug arbi_instance.wat;
        };
        arbi_instance.wat = 123;
        assert (arbi_instance.wat `equals` 123);
    };
};
