var test = (import "utils").test;
var throws = (import "utils").throws;

test "==" {
    var b1 = (new ByteArray [12 34 56]);
    var b2 = (new ByteArray [12 34 56]);
    var b3 = (new ByteArray [12 34 56 78]);
    var b4 = (new ByteArray [12 34 78]);

    assert (b1 == b1);
    assert (b1 == b2);
    assert (b1 != b3);
    assert (b1 != b4);

    assert (b2 == b1);
    assert (b2 == b2);
    assert (b2 != b3);
    assert (b2 != b4);

    assert (b3 != b1);
    assert (b3 != b2);
    assert (b3 == b3);
    assert (b3 != b4);

    assert (b4 != b1);
    assert (b4 != b2);
    assert (b4 != b3);
    assert (b4 == b4);
};

test "array-like behaviour" {
    var b = (new ByteArray [12 34 56]);
    assert ((b.get 0) == 12);
    assert ((b.get 1) == 34);
    assert ((b.get 2) == 56);
    throws ValueError { var _ = (b.get 3); };
    throws ValueError { var _ = (b.get (0-1)); };
    assert (b.length == 3);

    assert ((b.slice 0 3) == b);
    debug ((b.slice 1 3).get 0);
    assert ((b.slice 1 3) == (new ByteArray [34 56]));
    assert ((b.slice 1 2) == (new ByteArray [34]));
    assert ((b.slice 0 2) == (new ByteArray [12 34]));
    assert ((b.slice 1 1) == (new ByteArray []));
    assert ((b.slice 2 1) == (new ByteArray []));

    assert ((b.slice (0-10) 2) == (b.slice 0 2));
    assert ((b.slice 1 10) == (b.slice 1 3));
};
