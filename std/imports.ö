# the interpreter adds a variable called "importers" to the built-in scope before builtins.ö runs
# but most of the time people don't need to mess with importer functions
# so it's best to put it here imo
# builtins.ö imports this file automatically when setting up other stuff is done

var builtin_scope = ({}.definition_scope.parent_scope.get_value);
assert builtin_scope.parent_scope.is_none;

export {
    var importers = (builtin_scope.local_vars.get_and_delete "importers");
};


# a mistake that i just spent some time debugging: i did 'import "somefile.ö";'
# the .ö is not supposed to be a part of the string passed to import
importers.push (lambda "string stackframe" returning:true {
    if ((string.slice (string.length - 2)) == ".ö") {
        var no_dot_ö = (string.slice 0 (string.length-2));
        throw (new ValueError ((("import " + (no_dot_ö.to_debug_string)) + " instead of ") + (string.to_debug_string)));
    };
    return none;
});
