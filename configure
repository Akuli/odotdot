#!/bin/bash
# this is my attempt at making a configure script
#
# this script creates 2 files:
#    * config.h contains macro definitions for the C code
#    * ldflags.txt contains linker flags for Makefile (lol)
set -e

temp_cfile="$(tempfile -s .c)"
trap "rm -f '$temp_cfile'" EXIT    # good enough quoting


check_readline()
{
    echo -n "checking for readline... "
    cat >"$temp_cfile" <<EOF
#include <stdio.h>
#include <readline/readline.h>
#include <readline/history.h>

int main(void)
{
    return 0;
}
EOF
    if cc "$temp_cfile" -lreadline 2>/dev/null; then
        rm a.out
        echo found
        echo -lreadline >> ldflags.txt
        echo '#define HAVE_READLINE' >> config.h
        return 0
    else
        echo not found
        return 1
    fi
}


rm -f config.h ldflags.txt

echo "// generated by $0" >> config.h
echo '#ifndef CONFIG_H' >> config.h
echo '#define CONFIG_H' >> config.h
touch ldflags.txt       # must be empty if no libs needing ldflags are found

check_readline

echo '#endif   // CONFIG_H' >> config.h

cat <<EOF


Ã– is now ready to be compiled. Run 'make' to compile it.
EOF
